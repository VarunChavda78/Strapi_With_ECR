name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2   # <-- change this to your desired region (e.g., ap-south-1)
      
      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names strapi-ecr-repo || \
          aws ecr create-repository --repository-name strapi-ecr-repo

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: strapi-ecr-repo     # <-- Make sure this matches the repo name created in Terraform1
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Strapi-app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Save latest tag as artifact
        run: echo "latest" > image-tag.txt

      - name: Save ECR URL and image tag
        run: |
          echo "${{ steps.login-ecr.outputs.registry }}/strapi-ecr-repo:latest" > full-image-url.txt
          echo "${{ steps.login-ecr.outputs.registry }}/strapi-ecr-repo" > ecr-url.txt

      - name: Upload image tag
        uses: actions/upload-artifact@v4
        with:
          name: ecr-info
          path: |
            full-image-url.txt
            ecr-url.txt
          retention-days: 1
